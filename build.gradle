plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'org.mcphackers.mcp.MCP'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabricmc.net/' }
    flatDir {
        dirs "libs"
    }
}

dependencies {
    // Required libraries
    implementation 'com.github.MCPHackers:RetroFernflower:27123b6ebe'
    implementation 'org.fusesource.jansi:jansi:2.4.0'
    implementation 'net.fabricmc:tiny-remapper:0.6.0'
    implementation 'net.lingala.zip4j:zip4j:2.6.1'
    // TODO: Don't gut MCInjector bundled ASM
    implementation name: 'mcinjector'
    implementation 'org.json:json:20211205'
    implementation 'com.github.MinecraftForge:DiffPatch:25f256bf78'
}

application {
    // Redirect all execution into the testing folder
    mainClass = 'org.mcphackers.mcp.MCP'
    executableDir = 'test'
}

runShadow {

}

task decompile(type: JavaExec) {
    group 'RetroMCP-Java'

    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    workingDir 'test'
    args 'decompile', '-debug'
}

task recompile(type: JavaExec) {
    group 'RetroMCP-Java'

    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    workingDir 'test'
    args 'recompile', '-debug'
}

task update_md5(type: JavaExec) {
    group 'RetroMCP-Java'

    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    workingDir 'test'
    args 'updatemd5', '-debug'
}

task setup(type: JavaExec) {
    group = 'RetroMCP-Java'
    standardInput = System.in

    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    workingDir 'test'
    args 'setup', '-debug'
}