plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabricmc.net/' }
    flatDir {
        dirs "libs"
    }
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

dependencies {
    // Required libraries
    shadow "org.ow2.asm:asm:${project.asm_version}"
    shadow "org.ow2.asm:asm-analysis:${project.asm_version}"
    shadow "org.ow2.asm:asm-commons:${project.asm_version}"
    shadow "org.ow2.asm:asm-tree:${project.asm_version}"
    shadow "org.ow2.asm:asm-util:${project.asm_version}"

    shadow "com.github.MCPHackers:RetroFernflower:${project.fernflower_version}"
    shadow "com.github.MCPHackers:RetroDebugInjector:${project.rdi_version}"
    shadow "org.fusesource.jansi:jansi:${project.jansi_version}"
    shadow "org.json:json:${project.json_version}"
    shadow "com.github.MCPHackers:DiffPatch:${project.diffpatch_version}"
    shadow "net.fabricmc:mapping-io:${project.mapping_io_version}"
}

application {
    // Redirect all execution into the testing folder
    mainClass = 'org.mcphackers.mcp.main.MainGUI'
    executableDir = 'test'
    mkdir(executableDir)
}

run {
    workingDir 'test'
}

runShadow {

}

task jarGUI(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
	manifest {
		attributes 'Main-Class': 'org.mcphackers.mcp.main.MainGUI'
	}
	archiveClassifier = 'GUI'
	from sourceSets.main.output
	configurations = [project.configurations.shadow]
    minimize()
}

task jarCLI(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
	manifest {
		attributes 'Main-Class': 'org.mcphackers.mcp.main.MainCLI'
	}
	archiveClassifier = 'CLI'
	from sourceSets.main.output
	configurations = [project.configurations.shadow]
    minimize()
}

jar.dependsOn(jarCLI)
jar.dependsOn(jarGUI)
